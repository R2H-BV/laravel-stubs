<?php
declare(strict_types = 1);

namespace {{ namespace }};

use Illuminate\Bus\Batchable;
use Illuminate\Bus\Queueable;
use Illuminate\Bus\PendingBatch;
use Laravel\Nova\Actions\Action;
use Illuminate\Support\Collection;
use Laravel\Nova\Fields\ActionFields;
use Illuminate\Queue\SerializesModels;
use Illuminate\Queue\InteractsWithQueue;
use Illuminate\Contracts\Queue\ShouldQueue;
use Laravel\Nova\Contracts\BatchableAction;
use Laravel\Nova\Http\Requests\NovaRequest;

class {{ class }} extends Action implements ShouldQueue
{
    use Batchable;
    use Queueable;
    use SerializesModels;
    use InteractsWithQueue;

    /**
     * Get the displayable name of the action.
     *
     * @return string
     */
    public function name(): string
    {
        return '{{ class }}';
    }

    /**
     * Perform the action on the given models.
     */
    public function handle(ActionFields $fields, Collection $models): mixed
    {
        //
    }

    /**
     * Get the fields available on the action.
     */
    public function fields(NovaRequest $request): array
    {
        return [];
    }

    /**
     * Register `then`, `catch` and `finally` event on batchable job.
     */
    public function withBatch(ActionFields $fields, PendingBatch $batch): void
    {
        //
    }
}
