<?php
declare(strict_types = 1);

namespace {{ namespace }};

use {{ namespacedModel }};
use {{ namespacedUserModel }};
use Illuminate\Auth\Access\HandlesAuthorization;

class {{ class }}
{
    use HandlesAuthorization;

    /**
     * Determine whether the user can view any models.
     *
     * @param  \{{ namespacedUserModel }} $user The user model.
     * @return boolean
     */
    public function viewAny({{ user }} $user): bool
    {
        //
    }

    /**
     * Determine whether the user can view the model.
     *
     * @param  \{{ namespacedUserModel }} $user The user model.
     * @param  \{{ namespacedModel }} ${{ modelVariable }} The ${{ modelVariable }} model.
     * @return boolean
     */
    public function view({{ user }} $user, {{ model }} ${{ modelVariable }}): bool
    {
        //
    }

    /**
     * Determine whether the user can create models.
     *
     * @param  \{{ namespacedUserModel }} $user The user model.
     * @return boolean
     */
    public function create({{ user }} $user): bool
    {
        //
    }

    /**
     * Determine whether the user can update the model.
     *
     * @param  \{{ namespacedUserModel }} $user The user model.
     * @param  \{{ namespacedModel }} ${{ modelVariable }} The ${{ modelVariable }} model.
     * @return boolean
     */
    public function update({{ user }} $user, {{ model }} ${{ modelVariable }}): bool
    {
        //
    }

    /**
     * Determine whether the user can delete the model.
     *
     * @param  \{{ namespacedUserModel }} $user The user model.
     * @param  \{{ namespacedModel }} ${{ modelVariable }} The ${{ modelVariable }} model.
     * @return boolean
     */
    public function delete({{ user }} $user, {{ model }} ${{ modelVariable }}): bool
    {
        //
    }

    /**
     * Determine whether the user can restore the model.
     *
     * @param  \{{ namespacedUserModel }} $user The user model.
     * @param  \{{ namespacedModel }} ${{ modelVariable }} The ${{ modelVariable }} model.
     * @return boolean
     */
    public function restore({{ user }} $user, {{ model }} ${{ modelVariable }}): bool
    {
        //
    }

    /**
     * Determine whether the user can permanently delete the model.
     *
     * @param  \{{ namespacedUserModel }} $user The user model.
     * @param  \{{ namespacedModel }} ${{ modelVariable }} The ${{ modelVariable }} model.
     * @return boolean
     */
    public function forceDelete({{ user }} $user, {{ model }} ${{ modelVariable }}): bool
    {
        //
    }
}
